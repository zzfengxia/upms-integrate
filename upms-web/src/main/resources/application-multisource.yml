# Spring Boot 2.X 版本不再支持配置继承，多数据源的话每个数据源的所有配置都需要单独配置，否则配置不会生效
spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    # 使用druid连接池
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      stat-view-servlet:
        enabled: false # 关闭监控
      web-stat-filter:
        enabled: false
        session-stat-enable: false
      filter:
        stat:
          enabled: false
        wall:
          enabled: false
        slf4j:
          enabled: false
        log4j2:
          enabled: false
        log4j:
          enabled: false
        commons-log:
          enabled: false
      one:  # 多数据源
        url: jdbc:mysql://localhost/sptsm-pms?useUnicode=true&characterEncoding=utf-8
        username: root
        password: 123456
        initial-size: 5
        min-idle: 2
        max-active: 10
        # 启用数据库密码加密；多数据源的场景需要手动解密，重写DruidPasswordCallback.setProperties方法
        password-callback-class-name: com.vfuchong.sptsm.admin.config.DbPasswordCallback
        connection-properties: config.decrypt=true;config.decrypt.key=${druid-public-key};config.decrypt.password=Ftm4rjwdZLc3ah6MDnrMS/2iIdMQjpg0uZdCuaiX5E9JyS4gCZRHWRNedl+JI8DKgP48aKyvinshNLJv9bzNxA==

      two:  # 多数据源
        url: jdbc:mysql://192.168.1.208:3306/sptsm-pms?useUnicode=true&characterEncoding=utf-8
        username: answer
        password: answer
        initial-size: 4
        min-idle: 2
        max-active: 10
        # 启用数据库密码加密；多数据源的场景需要手动解密，重写DruidPasswordCallback.setProperties方法
        password-callback-class-name: com.vfuchong.sptsm.admin.config.DbPasswordCallback
        connection-properties: config.decrypt=true;config.decrypt.key=${druid-public-key};config.decrypt.password=Ftm4rjwdZLc3ah6MDnrMS/2iIdMQjpg0uZdCuaiX5E9JyS4gCZRHWRNedl+JI8DKgP48aKyvinshNLJv9bzNxA==

  # redis配置
  redis:
    password: root

druid-public-key: ffffffffffffffffffff

# 开启mybatis的日志输出，logging.level + mapper包名
logging:
  level:
    com.vfuchong.sptsm: debug
    com.baomidou.mybatisplus: debug