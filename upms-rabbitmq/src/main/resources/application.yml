server:
  tomcat:
     uri-encoding: UTF-8
     max-threads: 100
     min-spare-threads: 10
  port: 8083
  servlet:
    context-path: /mq

spring:
  application:
    name: mq-test
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://172.16.80.106:3306/upms?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: vfc_sptsm_qa
    # 生成的加密后的密码
    password: ftETtJ/EDOIB4MpNwX8+M0ehP9g4XSzo9puATWjsAUzeZszdqW0Em5PruVhwb4ZNocUbduR2vN+IjKMnlBPeqg==
    # 使用druid连接池
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 80
      max-active: 200
      # 启用数据库密码加密
      connection-properties: config.decrypt=true;config.decrypt.key=${druid-public-key}
      filter:
        stat:
          enabled: false
        wall:
          enabled: false
        slf4j:
          enabled: false
        log4j2:
          enabled: false
        log4j:
          enabled: false
        commons-log:
          enabled: false
        config: # 该配置要启用才能加密数据库密码
          enabled: true
      stat-view-servlet:
        enabled: false # 关闭监控
      web-stat-filter:
        enabled: false
        session-stat-enable: false
  redis:
    password: jfyxow!22##
    host: 172.16.80.106
    port: 6379
  rabbitmq:
    host: 172.16.80.117
    port: 5672
    # addresses:ip1:port1,ip2:port2,ip3:port3  #连接rabbitmq集群，host和port就不用配置了
    username: sptsm
    password: vfc2020_prod2020@@
    virtual-host: sptsm-dev
    listener:
      type: simple
      simple:
        default-requeue-rejected: false # 拒绝的消息是否重新投递，设置为false会将消息投入死信队列(绑定了死信Exchange的情况)
        acknowledge-mode: manual    # manual:手动确认消息
        concurrency: 2 # 并发消费，最小线程数
        retry:
          initial-interval: 2000
          max-attempts: 3
          enabled: true # 开启重试机制，需要关闭手动确认消息才能生效
    template:
      reply-timeout: 1000 # 消息投递后等待结果的时间
    publisher-confirm-type: correlated # 使用消息生产者发送确认模式
    cache:
      connection:
        # 默认CHANNEL缓存模式，当我们调用 createConnection()方法时，每次返回相同的Connection。默认情况下，
        # 只创建一个Connection，只创建一个Channel（通过配置创建Channel数量参数，可以创建缓存多个Channel）。即可以创建多个Channel，但是所有的Channel共用同一个Connection
        # 2. 如果选择CacheMode#CONNECTION的缓存模式，可以同时配置创建Connection的数量和Channel数据。当调用 createConnection()时，从缓存中获取可用Connection，
        # 如果没有且创建的数量没有达到上限，则创建新的Connection。同理Channel
        mode: CHANNEL

mybatis-plus:
  mapper-locations: classpath*:mapper/*.xml

druid-public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKdU10HP7aNZNvPjR/2bZlx3paIqefCSt3aLjIQdtgLNYla+T/I7UetNof7TymcX4eFuTO6OLiTIMD+jSzS5UTUCAwEAAQ==